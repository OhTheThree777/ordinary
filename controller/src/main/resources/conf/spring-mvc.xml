<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:websocket="http://www.springframework.org/schema/websocket"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!-- 在Controller中使用事物回滚 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 自动扫描controller包下的所有类，如果@Controller注入为bean -->
	<context:component-scan base-package="controller" />
	<context:component-scan base-package="websocket" />
	<mvc:default-servlet-handler />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/hplus/" mapping="/hplus/**" />
	<mvc:resources location="/ueditor/" mapping="/ueditor/**" />
	<mvc:resources location="/" mapping="/**/*.html" />

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 <bean id="mappingJacksonHttpMessageConverter" 
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
		</list> </property> </bean> -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter"
				  class="controller.common.CustomFastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<property name="features">
					<list>
						<!-- 输出key时是否使用双引号 -->
						<value>QuoteFieldNames</value>
						<!-- 是否输出值为null的字段 -->
						<!-- <value>WriteMapNullValue</value> -->
						<!-- 数值字段如果为null,输出为0,而非null -->
						<value>WriteNullNumberAsZero</value>
						<!-- List字段如果为null,输出为[],而非null -->
						<value>WriteNullListAsEmpty</value>
						<!-- 字符类型字段如果为null,输出为"",而非null -->
						<value>WriteNullStringAsEmpty</value>
						<!-- Boolean字段如果为null,输出为false,而非null -->
						<value>WriteNullBooleanAsFalse</value>
						<!-- null String不输出 -->
						<value>WriteNullStringAsEmpty</value>
						<!-- null String也要输出 -->
						<!-- <value>WriteMapNullValue</value> -->
						<!-- Date的日期转换器 -->
						<value>WriteDateUseDateFormat</value>
						<!-- 消除循环引用 -->
						<value>DisableCircularReferenceDetect</value>
					</list>

				</property>
				<property name="defaultDateFormat" value="yyyy-MM-dd HH:mm:ss"/>
			</bean>
		</mvc:message-converters>
		<mvc:argument-resolvers>
			<bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	<mvc:interceptors>
		<!-- On pre-handle, resolve the device that originated the web request -->
		<bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
	</mvc:interceptors>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->

	<bean id="viewResolver"
		  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order" value="2"/>
	</bean>

	<!-- html视图解析器 必须先配置freemarkerConfig,注意html是没有prefix前缀属性的 -->
	<bean id="freemarkerConfig"
		  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/"/>
	</bean>
	<bean id="htmlviewResolver"
		  class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".html" />
		<property name="order" value="0"/>
		<property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>

	<!-- 配置多文件上传 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="maxUploadSize" value="32505856"/>
		<property name="maxInMemorySize" value="4096"/>
	</bean>

	<!-- OAuth2拦截器 -->
	<!-- 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* <mvc:interceptors> <mvc:interceptor> 
		<mvc:mapping path="/app/**" /> <ref bean="oauth2Interceptor" /> </mvc:interceptor> 
		</mvc:interceptors> <bean id="oauth2Interceptor" class="cn.lr.interceptor.OAuth2Interceptor"> 
		</bean> -->
</beans>